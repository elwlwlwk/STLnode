{"version":3,"sources":["../src/stl.js"],"names":["STL","ts","freq","s_window","s_degree","t_window","t_degree","l_window","l_degree","s_jump","t_jump","l_jump","robust","False","inner","outer","length","map","datum","reduce","a","b","NaN","n","parseInt","Math","ceil","nextodd","weights","Array","fill","seasonal","trend","work","max","userw","stlstp","_","t_","transpose","x","i","stlrwt","remainder","m","round","y","ideg","njump","rw","ys","res","newnj","min","nleft","nright","nys","stlest","nhs","delta","j","k","floor","xs","w","h","r","push","abs","my_window","low_mask","high_mask","mid_mask","lowmid_mask","low","filter","high","mid","lowmid","r_mid","pow","ret","slice","from","keys","c","sqrt","t","np","stlma","ave","v","newn","ns","nt","nl","isdeg","itdeg","ildeg","nsjump","ntjump","nljump","ni","season","work0","work1","work2","work3","work4","stlss","stlfts","stless","fit","sorted_r","sort","med","work2_1","nval","module","exports"],"mappings":"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","file":"stl.js","sourcesContent":["class STL{\n    constructor(ts, freq, s_window, {s_degree=0, t_window=null,\n    t_degree=1, l_window=null, l_degree=null, s_jump=null,\n    t_jump=null, l_jump=null, robust=False, inner=null, outer=null}) {\n\n        if(ts[0].length > 2) throw 'The time series must have 1 timestamp and 1 value';\n        if(ts.map( datum => datum[1] ).reduce( (a,b) => a+b ) === NaN) throw 'The time series contains NaNs.';\n\n        var n = ts.length;\n\n        if(freq < 2) throw 'The frequency must be greater than 1.';\n        if(n <= 2 * freq) throw 'The time series must contain more than 2 full periods of data.';\n\n        if(s_window === 'periodic') s_window = 10 * n + 1;\n        if(s_jump === null) s_jump = parseInt(Math.ceil(s_window / 10));\n\n        if(t_window === null) t_window = this.nextodd(parseInt(Math.ceil(1.5 * freq / (1 - 1.5 / s_window))));\n        if(t_jump === null) t_jump = parseInt(Math.ceil(t_window / 10));\n\n        if(l_window === null) l_window = this.nextodd(freq);\n        if(l_degree === null) l_degree = t_degree;\n        if(l_jump === null) l_jump = parseInt(Math.ceil(l_window / 10));\n\n        if(inner === null) robust ? inner = 1 : inner = 2;\n        if(outer === null) robust ? outer = 15 : outer = 0;\n\n        var weights = new Array(n).fill(0);\n        var seasonal = new Array(n).fill(0);\n        var trend = new Array(n).fill(0);\n        var work =  new Array(n + 2 * freq).fill(0).map( x => new Array(5).fill(0));\n\n        s_window = Math.max(3, s_window);\n        t_window = Math.max(3, t_window);\n        l_window = Math.max(3, l_window);\n        if(s_window % 2 === 0) s_window += 1;\n        if(t_window % 2 === 0) t_window += 1;\n        if(l_window % 2 === 0) l_window += 1;\n\n        var userw = false;\n        work = this.stlstp(ts, n, freq, s_window, t_window, l_window, s_degree, t_degree, l_degree, s_jump, t_jump, l_jump, inner, userw, weights, seasonal, trend, work);\n\n        userw = true\n        for(let _=0; _<outer; _++) {\n            var t_ = this.transpose([trend, seasonal]).map( x => x[0]+x[1] );\n            for(let i=0; i<n; i++) work[i][0] = t_[i];\n            this.stlrwt(ts, n, work.map( x => x[0] ), weights);\n            work = this.stlstp(ts, n, freq, s_window, t_window, l_window, s_degree, t_degree, l_degree, s_jump, t_jump, l_jump, inner, userw, weights, seasonal, trend, work);\n        }\n\n        if(outer <= 0) weights.fill(1);\n\n        this.seasonal = seasonal\n        this.trend = trend\n        this.remainder = ts - trend - seasonal\n        this.weights = weights\n\n        this.s_window = s_window\n        this.t_window = t_window\n        this.l_window = l_window\n        this.s_degree = s_degree\n        this.t_degree = t_degree\n        this.l_degree = l_degree\n        this.s_jump = s_jump\n        this.t_jump = t_jump\n        this.l_jump = l_jump\n        this.inner = inner\n        this.outer = outer\n    };\n\n    transpose(m) { return m[0].map((x,i) => m.map(x => x[i])) };\n\n    nextodd(x) {\n        x = parseInt(Math.round(x));\n        if(x % 2 === 0) x += 1;\n        return x;\n    };\n\n    stless(y, n, length, ideg, njump, userw, rw, ys, res) {\n        if(n < 2) {\n            ys[0] = y[0];\n            return;\n        }\n\n        var newnj = Math.min(njump, n-1);\n        if(length >= n) {\n            var nleft = 1;\n            var nright = n;\n            for(let i=0; i<n; i+=newnj) {\n                var nys = this.stlest(y, n, length, ideg, i+1, ys[i], nleft, nright, res, userw, rw);\n                if(nys !== null) ys[i] = nys;\n                else ys[i] = y[i];\n            }\n        } else {\n            if(newnj === 1) {\n                var nhs = parseInt((length+1)/2)\n                var nleft = 1;\n                var nright = length;\n                for(let i=0; i<n; i++) {\n                    if(i+1 > nhs && nright !== n) {\n                        nleft += 1;\n                        nright += 1;\n                    }\n                    let nys = this.stlest(y, n, length, ideg, i+1, ys[i], nleft, nright, res, userw, rw);\n                    if(nys !== null) ys[i] = nys;\n                    else ys[i] = y[i];\n                }\n            } else {\n                var nhs = parseInt((length+1)/2);\n                for(let i=1; i<n+1; i+=newnj) {\n                    if(i < nhs) {\n                        var nleft = 1;\n                        var nright = length;\n                    } else if(i >= (n-nhs+1)) {\n                        var nleft = n-length+1;\n                        var nright = n;\n                    } else {\n                        var nleft = i-nhs+1;\n                        var nright = length+i-nhs;\n                    }\n                    nys = this.stlest(y, n, length, ideg, i, ys[i-1], nleft, nright, res, userw, rw);\n                    if(nys !== null) ys[i-1] = nys;\n                    else ys[i-1] = y[i-1];\n                }\n            }\n        }\n\n        if(newnj !== 1) {\n            for(let i=0; i<n-newnj; i+=newnj) {\n                var delta = (ys[i+newnj] - ys[i]) / newnj;\n                for(let j=i+1; j<i+newnj; j++) ys[j] = ys[i] + delta * (j-i);\n            }\n            var k = parseInt(Math.floor((n-1) / newnj) * newnj + 1);\n\n            if(k !== n) {\n                var nys = this.stlest(y, n, length, ideg, n, ys[n-1], nleft, nright, res, userw, rw);\n                if(nys !== null) ys[n-1] = nys;\n                else ys[n-1] = y[n-1];\n\n                if(k !== n-1) {\n                    delta = (ys[n-1] - ys[k-1]) / (n-k);\n                    for(let i=k; i<n-1; i++) ys[i] = ys[k-1] + delta * (i - k + 1)\n                }\n            }\n        }\n    }\n\n    stlest(y, n, length, ideg, xs, ys, nleft, nright, w, userw, rw) {\n        var nleft = parseInt(nleft);\n        var nright = parseInt(nright);\n\n        var h = Math.max(xs - nleft, nright - xs);\n        if(length > n) h += Math.floor((length - n) / 2);\n\n        var r = [];\n        for(let i=nleft-xs; i<nright-xs+1; i++) r.push(Math.abs(i));\n        var my_window = [];\n        for(let i=nleft-1; i<nright; i++) my_window.push(i);\n\n        var low_mask = r.map( x => x <= 0.001*h );\n        var high_mask = r.map( x => x > 0.999*h );\n        var mid_mask = this.transpose([low_mask, high_mask]).map( x => !(x[0] || x[1]) );\n        var lowmid_mask = high_mask.map( x => !x );\n\n        var low = this.transpose([my_window, low_mask]).filter( x => x[1] ).map( x => x[0] );\n        var high = this.transpose([my_window, high_mask]).filter( x => x[1] ).map( x => x[0] );\n        var mid = this.transpose([my_window, mid_mask]).filter( x => x[1] ).map( x => x[0] );\n        var lowmid = this.transpose([my_window, lowmid_mask]).filter( x => x[1] ).map( x => x[0] );\n\n        var r_mid = this.transpose([r, mid_mask]).filter( x => x[1] ).map( x => x[0] );\n\n        for(let i of low) w[i] = 1;\n        for(let i=0; i<mid.length; i++) w[mid[i]] = Math.pow(1 - Math.pow(r_mid[i]/h, 3), 3);\n        if(userw) for(let i of lowmid) w[i] *= rw[i];\n        var a = lowmid.map( (x) => w[x] ).reduce( (a,b) => a+b );\n\n        for(let i of high) w[i] = 0;\n\n        if(a <= 0) var ret = null;\n        else {\n            for(let i=nleft-1; i<nright; i++) w[i] /= a;\n            if(h > 0 && ideg > 0) {\n                a = this.transpose([w.slice(nleft-1, nright), Array.from(Array(nright+1-nleft).keys()).map( (x) => x+nleft )]).map( (x) => x[0] * x[1] ).reduce( (a,b) => a + b );\n                var b = xs - a;\n                var c = this.transpose([w.slice(nleft-1, nright), Array.from(Array(nright+1-nleft).keys()).map( (x) => Math.pow(x+nleft-a, 2) )]).map( (x) => x[0] * x[1] ).reduce( (a,b) => a + b );\n                if(Math.sqrt(c) > 0.001*(n-1)) {\n                    b /= c;\n                    let t = Array.from(Array(nright+1-nleft).keys()).map( x => (x+nleft-a)*b + 1 );//(b * numpy.arange(nleft-a, nright+1-a) + 1)\n                    for(let i=nleft-1; i<nright; i++) w[i] *= t[i-nleft+1];\n                }\n            }\n            ret = this.transpose([w.slice(nleft-1, nright),y.slice(nleft-1, nright)]).map( x => x[0] * x[1] ).reduce( (a,b) => a+b );\n        }\n\n        return ret;\n    }\n\n    stlfts(x, n, np, trend, work) {\n        this.stlma(x, n, np, trend);\n        this.stlma(trend, n-np+1, np, work);\n        this.stlma(work, n-2*np+2, 3, trend);\n    }\n\n    stlma(x, n, length, ave) {\n        var v = x.slice(0, length).reduce( (a,b) => a+b );\n        ave[0] = v / length;\n\n        var newn = n - length + 1;\n        if(newn > 1) {\n            var k = length;\n            var m = 0;\n            for(let j=1; j<newn; j++) {\n                k += 1;\n                m += 1;\n                v = v - x[m-1] + x[k-1];\n                ave[j] = v / length;\n            }\n        }\n    }\n\n    stlstp(y, n, np, ns, nt, nl, isdeg, itdeg, ildeg, nsjump, ntjump, nljump, ni, userw, rw, season, trend, work) {\n        for(let _=0; _<ni; _++) {\n            for(let i=0; i<n; i++) work[i][0] = y[i][1] - trend[i];\n            var [work0, work1, work2, work3, work4] = this.transpose(work);\n            this.stlss(work0, n, np, ns, isdeg, nsjump, userw, rw, work1, work2, work3, work4, season);\n            this.stlfts(work1, n+2*np, np, work2, work0);\n            this.stless(work2, n, nl, ildeg, nljump, false, work3, work0, work4);\n            for(let i=0; i<n; i++) season[i] = work1[np+i] - work0[i];\n            for(let i=0; i<n; i++) work0[i] = y[i][1] - season[i];\n            this.stless(work0, n, nt, itdeg, ntjump, userw, rw, trend, work2);\n            work = this.transpose([work0, work1, work2, work3, work4]);\n        }\n        return work;\n    }\n\n    stlrwt(y, n, fit, rw) {\n        var r = this.transpose([y.map( (x) => x[1]), fit]).map( x => Math.abs(x[0]-x[1]) );\n        var sorted_r = r.slice(0).sort( (a,b) => a-b );\n        var med = 6 * sorted_r[parseInt(sorted_r.length/2)];\n        var low = r.map( x => x <= 0.001*med );\n        var high = r.map( x => x > 0.999*med );\n        var mid = this.transpose([low, high]).map( x => !(x[0] || x[1]) );\n\n        for(let i in low) low[i] ? rw[i] = 1 : null;\n        for(let i in mid) mid[i] ? rw[i] = Math.pow(1 - Math.pow(r[i] / med, 2), 2) : null;\n        for(let i in high) high[i] ? rw[i] = 0 : null;\n    }\n\n    stlss(y, n, np, ns, isdeg, nsjump, userw, rw, season, work1, work2, work3, work4) {\n        for(let j=0; j<np; j++) {\n            var k = Math.floor((n-j-1)/np+1);\n            for(let i=0; i<k; i++) work1[i] = y[i*np+j];\n\n            if(userw) for(let i=0; i<k; i++) work3[i] = rw[i*np+j];\n\n            var work2_1 = work2.slice(1);\n            this.stless(work1, k, ns, isdeg, nsjump, userw, work3, work2_1, work4);\n            for(let i=0; i<work2_1.length; i++) work2[i+1] = work2_1[i];\n            var nright = Math.min(ns, k);\n\n            var nval = this.stlest(work1, k, ns, isdeg, 0, work2[0], 1, nright, work4, userw, work3);\n            if(nval !== null) work2[0] = nval;\n            else work2[0] = work2[1];\n\n            var nleft = Math.max(1, k-ns+1);\n\n            nval = this.stlest(work1, k, ns, isdeg, k+1, work2[k+1], nleft, k, work4, userw, work3);\n            if(nval !== null) work2[k+1] = nval;\n            else work2[k+1] = work2[k];\n\n            for(let m=0; m<k+2; m++) season[m*np+j] = work2[m];\n        }\n    }\n}\n\nmodule.exports.STL = STL;"]}